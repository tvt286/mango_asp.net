@using Mango.Common
@using Mango.Client.Common
@using Mango.Services
@using Mango.Security
@using Mango.Data.Enums

@model Mango.Areas.Admin.Models.StoreOrder
<link href="~/Content/Admin/PagedList.css" rel="stylesheet" type="text/css" />
@{
    ViewBag.Title = "Confirm Order Import";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
    var user = UserService.GetUserInfo();
}
<div class="row">
    <div class="col-xs-12">
        <div class="page-title-box">
            <h4 class="page-title">Confirm Order Import</h4>
            <ol class="breadcrumb p-0 m-0">
                <li>
                    <a href="@Url.Action("Index", "Home")">Mango</a>
                </li>
                <li class="active">
                    <strong>Confirm Order Import</strong>
                </li>
            </ol>

            <div class="clearfix"></div>
            <a style="margin-right:10px" onclick="$('#btUpdate').click()" class="btn btn-primary waves-effect waves-light m-t-sm">Save</a>
            @Html.ActionLink("Cancel", "StoreOrderImport", null, new { @class = "btn btn-default waves-effect m-t-sm" })

        </div>
    </div>
</div>

@using (Ajax.BeginForm("CreateStoreOrderImport", "StoreOrder", null, new AjaxCommonOption(), new { role = "form", id = "CreateForm" }))
{
    @Html.HiddenFor(x => x.Id)
    @Html.HiddenFor(x => x.StoreImExTypeCode)
    <div class="row">
        <div class="col-sm-12">
            <div class="card-box animated fadeInRight">
                <div>
                    <h5>Order import info</h5>
                </div>
                <div class="row">

                    <div class="form-horizontal">
                        <div class="form-group">
                          
                            <label class="control-label col-md-2">Code<span style="color: Red">(*)</span></label>
                            <div class="col-md-4">
                                @Html.TextBoxFor(x => x.Code, null, new { @class = "form-control", disabled = "disabled", placeholder = "Auto create" })
                                @*@Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })*@
                            </div>
                          
                            <label class="control-label col-md-2">Date import<span style="color: Red">(*)</span></label>
                            <div class="col-md-4">
                                <div class="input-group date">
                                    @Html.TextBoxFor(x => x.TimeImport, new { @class = "form-control", data_val = "true", data_val_required = "Thông tin bắt buộc" })
                                    <span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                                </div>
                                @Html.ValidationMessageFor(model => model.TimeImport, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label col-md-2">User import<span style="color: Red">(*)</span></label>
                            <div class="col-md-4">
                                @Html.DropDownListFor(x => x.UserImportId, null, "-- User import --", new { @class = "form-control", data_val = "true", data_val_required = "Thông tin bắt buộc" })
                                @Html.ValidationMessageFor(x => x.UserImportId, "", new { @class = "text-danger" })
                            </div>
                            <label class="control-label col-md-2">Store import<span style="color: Red">(*)</span></label>
                            <div class="col-md-4">
                                @Html.DropDownListFor(x => x.RefStoreId, null, "-- Store import --", new { @class = "form-control", data_val = "true", data_val_required = "Thông tin bắt buộc" })
                                @Html.ValidationMessageFor(x => x.RefStoreId, "", new { @class = "text-danger" })
                            </div>
                        </div>


                        <div class="form-group">
                            <label class="control-label col-md-2">Note</label>
                            <div class="col-md-4">
                                @Html.TextAreaFor(x => x.Note, new { @class = "form-control", @placeholder = "Note" })
                            </div>

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-sm-12">
            <div class="card-box table-responsive">           
                    <table id="tableImportDetail" class="table table-striped table-colored table-info table-hover">
                        <tr style="background-color: #323f86; color: white; ">
                            <th>
                                Product
                            </th>
                            <th>
                                Image
                            </th>

                            <th>
                                Category
                            </th>

                            <th>
                                Quantity Import
                            </th>

                            <th>
                                Price
                            </th>

                            @if (Model.Id == 0)
                            {
                                <th></th>
                            }

                        </tr>
                       
                            @foreach (var item in Model.StoreOrderImportDetails)
                            {
                                <tr>
                                    <td>
                                        <input type="hidden" name="storeOrderImportDetailId" value="@item.Id" />
                                        @item.Product.Name
                                    </td>

                                    <td>
                                        <img class="imageProduct" style="width: 50px;" />
                                    </td>


                                    <td>
                                        @item.Product.Category.Name
                                    </td>


                                    <td>
                                        @item.Quantity.ToString("0.##")
                                    </td>

                                    <td>
                                        @item.MainSupplierPrice.MoneyToStringVN()
                                    </td>
                                </tr>
                            }
                       
                       
                            <tr>
                               
                              
                               
                                <td style="text-align:center">
                                    <input type="text" class="form-control autoNumeric" placeholder="Quantity" name="quantityRequestImport" onblur="CalculateExchange(this)" />
                                </td>
                                <td style="text-align:center">
                                    <input type="text" placeholder="Price" class="form-control autoNumeric" name="mainSupplierPrice" />
                                </td>

                                <td>
                                    <a href="javascript:void(0)" onclick="RemoveProduct(this)">
                                        <i class="fa fa-times" style="color: red"></i>
                                    </a>
                                </td>
                            </tr>
                     
                    </table>

                </div>


                @if (Model.Id == 0)
                {
                    <input class="btn btn-primary m-t-sm" type="submit" id="btUpdate" value="Save" />
                }
                @Html.ActionLink("Cancel", "StoreOrderImport", null, htmlAttributes: new { @class = "btn btn-default m-t-sm", role = "button" })
            </div>
        </div>

}

@section scripts
{
    <script src="~/Scripts/Admin/plugins/datatables/jquery.dataTables.min.js"></script>
    <script src="~/Scripts/Admin/plugins/datatables/dataTables.bootstrap.js"></script>
    <script src="~/Scripts/Admin/plugins/datatables/dataTables.fixedHeader.min.js"></script>
    <script src="~/Scripts/Admin/plugins/datatables/dataTables.keyTable.min.js"></script>
    <script src="~/Scripts/Admin/plugins/datatables/dataTables.responsive.min.js"></script>
    <script src="~/Scripts/Admin/plugins/datatables/responsive.bootstrap.min.js"></script>
    <script src="~/Scripts/Admin/plugins/datatables/jquery.datatables.init.js"></script>

    <script>
        function process(date) {
            var parts = date.split("/");
            return new Date(parts[2], parts[1] - 1, parts[0]);
        }

        $("#btSearch").click(function () {
            var from = process($("#TimeImportFrom").val());
            var to = process($("#TimeImportTo").val());
            if (to != "" && from != "" && from > to) {
                AlertError("Vui lòng chọn ngày nhập từ nhỏ hơn hoặc bằng ngày nhập đến");
                return false;
            }
        });
    </script>
}
