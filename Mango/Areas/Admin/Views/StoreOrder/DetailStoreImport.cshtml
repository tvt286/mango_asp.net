@using Mango.Common
@using Mango.Client.Common
@using Mango.Services
@using Mango.Security
@using Mango.Data.Enums
@using Mango.Web
@using Mango.Data
@model Mango.Data.StoreOrder

@{
    ViewBag.Title = "Create Order Import";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";

    var action = "CreateStoreOrderImport";
    if (ViewBag.IsConfirm)
    {
        ViewBag.Title = "Confirm Order Import";
        action = "ImportStoreOrderFromOtherStore";
    }
}

<div class="row">
    <div class="col-xs-12">
        <div class="page-title-box">
            <h4 class="page-title">Create Order Import</h4>
            <ol class="breadcrumb p-0 m-0">
                <li>
                    <a href="@Url.Action("Index","Home")">Mango</a>
                </li>
                <li>
                    <a href="@Url.Action("StoreOrderImport")">Create Order Import</a>
                </li>
                <li class="active">
                    <strong>Create</strong>
                </li>
            </ol>

            <div class="clearfix"></div>
            @if(Model.Id == 0)
            {
                <a style="margin-right:10px" onclick="$('#btUpdate').click()" class="btn btn-primary waves-effect waves-light m-t-sm">Save</a>                
            }
            else if (ViewBag.IsConfirm)
            {
                <a style="margin-right:10px" onclick="$('#btUpdate').click()" class="btn btn-primary waves-effect waves-light m-t-sm">Confirm</a>                

            }
            @Html.ActionLink("Cancel", "StoreOrderImport", null, new { @class = "btn btn-default waves-effect m-t-sm" })
        </div>
    </div>
</div>
<!-- end row -->
@using (Ajax.BeginForm(action, "StoreOrder", null, new AjaxCommonOption(), new { role = "form", id = "CreateForm" }))
{
    @Html.HiddenFor(x => x.Id)
    @Html.HiddenFor(x => x.StoreImExTypeCode)
    <div class="row">
        <div class="col-sm-12">
            <div class="card-box animated fadeInRight">
                <div>
                    <h5>Order import info</h5>
                </div>
                <div class="row">

                    <div class="form-horizontal">
                        <div class="form-group">
                            @if (Model.Id != 0)
                            {
                                <label class="control-label col-md-2">Code<span style="color: Red">(*)</span></label>
                                <div class="col-md-4">
                                    @Html.TextBoxFor(x => x.Code, null, new { @class = "form-control", placeholder = "Auto create" })
                                    @*@Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })*@
                                </div>
                            }

                            <label class="control-label col-md-2">Date import<span style="color: Red">(*)</span></label>
                            <div class="col-md-4">
                                <div class="input-group date">
                                    @Html.TextBoxFor(x => x.TimeImport, new { @class = "form-control", data_val = "true", data_val_required = "Thông tin bắt buộc" })
                                    <span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                                </div>
                                @Html.ValidationMessageFor(model => model.TimeImport, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label col-md-2">User import<span style="color: Red">(*)</span></label>
                            <div class="col-md-4">
                                @Html.DropDownListFor(x => x.UserImportId, null, "-- User import --", new { @class = "form-control", data_val = "true", data_val_required = "Thông tin bắt buộc" })
                                @Html.ValidationMessageFor(x => x.UserImportId, "", new { @class = "text-danger" })
                            </div>
                            <label class="control-label col-md-2">Store import<span style="color: Red">(*)</span></label>
                            <div class="col-md-4">
                                @Html.DropDownListFor(x => x.RefStoreId, null, "-- Store import --", new { @class = "form-control", data_val = "true", data_val_required = "Thông tin bắt buộc" })
                                @Html.ValidationMessageFor(x => x.RefStoreId, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        @if (Model.Id != 0 && ViewBag.IsConfirm)
                        {
                            <div class="form-group">
                           
                                <label class="control-label col-md-2">Order export<span style="color: Red">(*)</span></label>
                                <div class="col-md-4">
                                    @Html.DropDownListFor(x => x.StoreId, null, "-- Store export --", new { @class = "form-control", data_val = "true", data_val_required = "Thông tin bắt buộc" })
                                    @Html.ValidationMessageFor(x => x.StoreId, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        }

                        <div class="form-group">
                            <label class="control-label col-md-2">Note</label>
                            <div class="col-md-4">
                                @Html.TextAreaFor(x => x.Note, new { @class = "form-control", @placeholder = "Note" })
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-sm-12">
            <div class="card-box table-responsive">
                @if (Model.Id == 0)
                {
                    <div style="margin-bottom:10px">
                        <button class="btn btn-primary" type="button" id="btAdd">
                            <i class="fa fa-plus"></i>
                            <span class="bold">Add product</span>
                        </button>
                        <br style="clear: both" />
                    </div>
                }
                <div>
                    <table id="tableImportDetail" class="table table-striped table-colored table-info table-hover">
                        <tr style="background-color: #323f86; color: white; ">
                            <th>
                                Product
                            </th>
                            <th>
                                Image
                            </th>

                            <th>
                                Category
                            </th>

                            <th >
                                Quantity Import
                            </th>

                            <th>
                                Price
                            </th>
                            <th>
                                Note
                            </th>
                            @if (Model.Id == 0)
                            {
                                <th></th>
                            }

                        </tr>
                        @if (Model.Id != 0)
                        {
                            foreach (var item in Model.StoreOrderImportDetails)
                            {
                                <tr>
                                    <td>
                                        <input type="hidden" name="storeOrderImportDetailId" value="@item.Id" />
                                        @item.Product.Name
                                    </td>
                                    <td>
                                        <img class="imageProduct" style="width: 50px;" src="@Url.ImageProduct(item.Product)" />
                                    </td>

                                    <td class="category">
                                        @item.Product.Category.Name
                                    </td>


                                    <td>
                                        <input type="hidden" type="text" name="quantityRequestImport" class="form-control autoNumeric" value="@item.Quantity.ToString("0.##")" />
                                        @item.Quantity.ToString("0.##")
                                    </td>

                                    <td>
                                        @item.MainSupplierPrice.MoneyToStringVN()
                                    </td>
                                    <th>
                                        <input type="text" name="noteImport" class="form-control" value="@item.Note" />
                                    </th>

                                </tr>
                            }
                        }
                        else
                        {
                            <tr>
                                <td>
                                    @Html.DropDownList("productId", (List<SelectListItem>)ViewBag.ProductSelect, "-- Product --", new { @class = "form-control", onchange = "ChangeProduct(this)" })
                                </td>
                                <td>
                                    <img class="imageProduct" style="display: none; width: 50px;" />
                                </td>

                                <td class="category"></td>

                                <td style="text-align:center">
                                    <input type="text" class="form-control autoNumeric" placeholder="Quantity" name="quantityRequestImport" onblur="CalculateExchange(this)"  />
                                </td>
                                <td style="text-align:center">
                                    <input type="text" placeholder="Price" class="form-control autoNumeric" name="mainSupplierPrice" />
                                </td>

                                <td>
                                    <a href="javascript:void(0)" onclick="RemoveProduct(this)">
                                        <i class="fa fa-times" style="color: red"></i>
                                    </a>
                                </td>
                            </tr>
                        }

                    </table>

                </div>


                @if (Model.Id == 0)
                {
                    <input class="btn btn-primary m-t-sm" type="submit" id="btUpdate" value="Save" />
                }
                else if (ViewBag.IsConfirm)
                {
                    <input class="btn btn-primary m-t-sm" type="submit" id="btUpdate" value="Confirm" />

                }
                @Html.ActionLink("Cancel", "StoreOrderImport", null, htmlAttributes: new { @class = "btn btn-default m-t-sm", role = "button" })
            </div>
        </div>

    </div>
}

@section Styles {
    <link href="~/Content/Admin/chosen.css" rel="stylesheet" />

    <style>
        .input-validation-error {
            border: 1px solid red;
        }
    </style>
}

@section scripts
{
<script src="~/Scripts/Admin/plugins/datatables/jquery.dataTables.min.js"></script>
<script src="~/Scripts/Admin/plugins/datatables/dataTables.bootstrap.js"></script>
<script src="~/Scripts/Admin/plugins/datatables/dataTables.fixedHeader.min.js"></script>
<script src="~/Scripts/Admin/plugins/datatables/dataTables.keyTable.min.js"></script>
<script src="~/Scripts/Admin/plugins/datatables/dataTables.responsive.min.js"></script>
<script src="~/Scripts/Admin/plugins/datatables/responsive.bootstrap.min.js"></script>
<script src="~/Scripts/Admin/plugins/datatables/jquery.datatables.init.js"></script>
    <script src="~/Scripts/Admin/chosen.jquery.js"></script>

    @if (Model.Id != 0)
    {
        @*<script type="text/javascript">
            $(function () {
                $("input").not("[type=submit]").attr("disabled", "disabled");
                $("select").attr("disabled", "disabled");
                $("textarea").attr("disabled", "disabled");
            })
        </script>*@
    }
    else
    {
        <script type="text/javascript">
            function InitFormImportDetail() {
                $('#CreateForm .input-group.date').datetimepicker({
                    locale: 'vi',
                    format: 'DD/MM/YYYY',
                    extraFormats: ["MM/YYYY"],
                    defaultDate: null
                });


                $("input[name=quantityRequestImport]:last, " +
                        "input[name=mainSupplierPrice]:last")
                    .autoNumeric('init', { aPad: false, aSep: '.', aDec: ',', vMin: 0.00, vMax: 99999999999999999.00 });

            }

          

            function ChangeProduct(element) {
                OnBeginAjax();
                var id = $(element).val();
                $.post('@Url.Action("GetInfoProduct","Product")',
                    {
                        id: id
                    },
                    function (data) {
                        //$(element).closest("tr").find(".supplierPrice").html(data.SupplierPrice);
                        //$(element).closest("tr").find(".sellingPrice").html(data.SellingPrice);

                        $(element).closest("tr").find("input[name=mainSupplierPrice]").val(data.SupplierPrice.replace(".", ""));
                        if (data.Image != "") {
                            $(element).closest("tr").find(".imageProduct").attr("src", data.Image).show();
                        } else {
                            $(element).closest("tr").find(".imageProduct").hide();
                        }
                        $(element).closest("tr").find(".category").html(data.CategoryName);
                        //for (var i = 0; i < data.UnitDetailList.length; i++) {
                        //    var item = data.UnitDetailList[i];
                        //    $(unitDetailSelect).append($('<option></option>').val(item.Id).html(item.Name).attr("exchange", item.UnitExchange));
                        //}

                        OnCompleteAjax();
                    });
            }

            function RemoveProduct(element) {
                if (confirm("Xác nhận xóa!")) {
                    $(element).closest("tr").remove();
                }
            }

            function validateFields() {
                var submit = true;
                $.each($("#CreateForm select[name='productId'],   #CreateForm input[name='quantityRequestImport'], #CreateForm input[name='mainSupplierPrice']"), function (i, element) {
                    if ($(element).val() == "") {
                        submit = false;
                        $(element).addClass("input-validation-error");
                    } else {
                        $(element).removeClass("input-validation-error");
                    }
                });
                return submit;
            }

            $(function () {
                $("body").addClass("mini-navbar");

                var cloned = $("#tableImportDetail tr:last")[0].outerHTML;
              
                $("body").addClass("mini-navbar");
                $("input[name=mainSupplierPrice], input[name=quantityRequestImport]")
                    .autoNumeric('init', { aPad: false, aSep: '.', aDec: ',', vMin: 0.00, vMax: 99999999999999999.00 });

                $("#btAdd").click(function () {
                    $("#tableImportDetail").append(cloned);
                    $.removeData($('#CreateForm').get(0), 'validator');
                    jQuery.validator.unobtrusive.parse('#CreateForm');
                    InitFormImportDetail();
                });

                $("#CreateForm")
                    .submit(function () {
                        if (validateFields() == false) {
                            return false;
                        }

                        $('.autoNumeric').each(function (i) {
                            var self = $(this);
                            try {
                                var v = self.autoNumeric('get');
                                //self.autoNumeric('destroy');
                                self.val(v);
                            } catch (err) {
                                self.val(0);
                            }
                        });
                    });
            });


        </script>
    }

}
